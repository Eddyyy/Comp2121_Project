Project Name: Monorail Emulator
Aim: to create a program that emulates the operation of a monorail with passengers getting on and off at different inputted stops on the Atmega2560

Use Cases:
	1. The number of stations is typed then * or # is pressed to finish (max number is 10 and cannot type letters)
	2. The First station is typed in then * or # is pressed to finish (no more characters than 10 and 0 is a space)
	3. This is repeated for up to 10 stations based on the first number typed in
	4. The time to travel between each station is typed in with the same finish (max 10 and no letters)
	5. This is repeated for all the connections (first one being 1/2 then up to n-1/n)
	6. Then the time that the monorail stops at each station is typed in with same finish (max 10 and no letters)
	7. After 5 seconds the emulation component begins
	8. The stations are visted from 1 to n and back to 1 and so on. the configeration determines the times around and the names of the stations
	9. PB1 is used to signal the train that a passenger wants to get on.
	10. Then PB0 is used to signal a passenger wants to get off
	11. The # key stops the monorail exactly where it is and pressing it again starts the monorail again
	
functions or data we might want:
	One that sends message to the lcd and gets an input from the keypad
	The station names could be stored in an array.
	Have a particular macro that waits exactly one second
	
configuration values

station Array:
([0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15]	)*n
([station string with ';' terminator  0-10  ] [ti],[st]					)
(st is the time to stop at station)	
(ti is time to next station)
add yl, (9<<4)
adc yh, 0
Y+(n<<4) to access Y[n]

station representation: 'AD C' --> A, B, ' ', C, 0

get_str: ;(mode=r17, &result=X)
	;while(c<10 or temp != D
	rcall keypad
	;do logic on temp takes into account mode
	display temp ;if temp != A,B,C,D
	;if temp == D && mode == 1 --> store ';'


display_message: ;(&message)

store_result: ;(&result, &config_array)

main:
	config:
	; asks first question 'Please type the maximum number of stations:' 
	display_message,xl,xh ;A will hold the message to send to LCD
	clr mode
	rcall get_str ;return result
	store_result;(&result, &config_array)

	for(i=0;i<result;i++) {
		display_message,xl,xh ;A will hold the message to send to LCD
		ser mode
		rcall get_str ;return result
		store_result;(&result, &config_array)
	}
	
	for(i=0;i<result;i++) {
		display_message,xl,xh ;A will hold the message to send to LCD
		clr mode
		rcall get_str ;return result
		store_result;(&result, &config_array)
	}
	
	emulation:
	while (true) {
		display_next_station()
		got_to_next_station()
		if (flag0) {
		stop_at_station(sec)
		}
	}
	
bugs:
	keypad typing zero
	keypad typing 'D' at the begining
	fix refresh error handler
	finish main